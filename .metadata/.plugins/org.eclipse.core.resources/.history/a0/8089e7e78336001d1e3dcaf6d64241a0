#include <avr/io.h>
#include <util/delay.h>
#include <avr/interrupt.h>
    /*********************************************************** start section of global variables***********************************************************************/
unsigned int g_tick = 0;
unsigned char g_num1 = 0;
unsigned char g_num2 = 0;
unsigned char g_num3 = 0;
unsigned char g_num4 = 0;
unsigned char g_num5 = 0;
unsigned char g_num6 = 0;
unsigned char g_sec1 = 0;
unsigned char g_sec2 = 0;
unsigned char g_min1 = 0;
unsigned char g_min2 = 0;
unsigned char g_hour1 = 0;
unsigned char g_hour2 = 0;
 /****************************************************************** start section of function definitions ****************************************************************/
 void display(void){                     // display fn used in while(1) to disply all leds in order
	 PORTA =  (PORTA&0xC0) | (1<<0);
	 PORTC = (PORTC & 0xF0) | (g_num1 & 0x0F);
	 _delay_ms(2);
	 PORTA =  (PORTA&0xC0) | (1<<1);
	 PORTC = (PORTC & 0xF0) | (g_num2 & 0x0F);
	 _delay_ms(2);
	 PORTA =  (PORTA&0xC0) | (1<<2);
	 PORTC = (PORTC & 0xF0) | (g_num3 & 0x0F);
	 _delay_ms(2);
	 PORTA =  (PORTA&0xC0) | (1<<3);
	 PORTC = (PORTC & 0xF0) | (g_num4 & 0x0F);
	 _delay_ms(2);
	 PORTA =  (PORTA&0xC0) | (1<<4);
	 PORTC = (PORTC & 0xF0) | (g_num5 & 0x0F);
	 _delay_ms(2);
	 PORTA =  (PORTA&0xC0) | (1<<5);
	 PORTC = (PORTC & 0xF0) | (g_num6 & 0x0F);
	 _delay_ms(2);
 }
void timer1_init(void){         // enabling timer1 to count every second
	TCNT1 = 0;
	OCR1A = 976;
	TIMSK |= (1<<OCIE1A);
	TCCR1A = (1<<FOC1A) | (1<<FOC1B);
	TCCR1B = (1<<WGM12) |(1<<CS10)|(1<<CS12);
}
void INT0_Init(void)
{
	DDRD  &= (~(1<<PD2));               // Configure INT0/PD2 as input pin
	PORTD |= (1<<PD2);                 // Activate the internal pull up resistor at PD2
	MCUCR |=  (1<<ISC01);              // Trigger INT0 with the failing edge
	GICR  |= (1<<INT0);                 // Enable external interrupt pin INT0
}
void INT1_Init(void)
{
	DDRD  &= (~(1<<PD3));                 // Configure INT1/PD3 as input pin
	MCUCR |= (1<<ISC11)|(1<<ISC10);       // Trigger INT1 with the rising edge
	GICR  |= (1<<INT1);                   // Enable external interrupt pin INT1
}
void INT2_Init(void)
{
	DDRB   &= (~(1<<PB2));   // Configure INT2/PB2 as input pin
	PORTB |= (1<<PB2);       // Activate the internal pull up resistor at PB2
	MCUCSR &= (~(1<<ISC2));     // Trigger INT2 with the failing edge
	GICR   |= (1<<INT2);	 // Enable external interrupt pin INT2
}
/****************************************************************** start section of ISR intrupt functions ****************************************************************/

ISR(INT0_vect){              // set all variables to 0 so that stop watch reset
	TCNT1 = 0;
	g_tick = 0;
	g_num1 = 0;
	g_num2 = 0;
	g_num3 = 0;
	g_num4 = 0;
	g_num5 = 0;
	g_num6 = 0;
	g_sec1 = 0;
	g_sec2 = 0;
	g_min1 = 0;
	g_min2 = 0;
	g_hour1 = 0;
	g_hour2 = 0;
	TCCR1B |= (1<<CS10)|(1<<CS12);  // OPEN the clk source of the timer if the user paused it
}

ISR(INT1_vect){
	TCCR1B &= (~(1<<CS10)) & (~(1<<CS12));          // CLOSE the clk source of the timer
}
ISR(INT2_vect){
	TCCR1B |= (1<<CS10)|(1<<CS12);                  // OPEN the clk source of the timer
}

ISR(TIMER1_COMPA_vect) {      // start the timer and increase 1 second every intrupt
	g_tick++;
	g_sec1++;
	g_num1++;
	if(g_tick%10==0)
	{
		g_num1=0;
		g_sec1=0;
		g_sec2++;
		g_num2++;
	}
	if(g_tick%60==0)
	{
		g_num1=0;
		g_sec1=0;
		g_num2=0;
		g_sec2=0;
		g_num3++;
	}
	if(g_tick%600==0)
	{
		g_num1=0;
		g_num2=0;
		g_num3=0;
		g_sec1=0;
		g_sec2=0;
		g_min1=0;
		g_num4++;
	}
	if(g_tick%3600==0)
	{
		g_num1=0;
		g_num2=0;
		g_num3=0;
		g_num4=0;
		g_sec1=0;
		g_sec2=0;
		g_min1=0;
		g_min2=0;
		g_num5++;
	}
	if(g_tick%36000==0)
	{
		g_num1=0;
		g_num2=0;
		g_num3=0;
		g_num4=0;
		g_num5=0;
		g_sec1=0;
		g_sec2=0;
		g_min1=0;
		g_min2=0;
		g_hour1 = 0;
		g_num6++;
	}
	if(g_tick%216000==0)
		{
		g_num1=0;
		g_num2=0;
		g_num3=0;
		g_num4=0;
		g_num5=0;
		g_num6=0;
		g_sec1=0;
		g_sec2=0;
		g_min1=0;
		g_min2=0;
		g_hour1 = 0;
		g_hour2 = 0;
		g_tick=0;
		}
}
/****************************************************************** start section of main function ****************************************************************/
int main(void)
{
	DDRC |= 0x0F;       // configure first four pins of PORTC as output pins
	DDRA |= 0x3F;       // configure first six pins of PORTA as output pins
	SREG|=(1<<7);       // Enable interrupts by setting I-bit
	PORTC &= 0xF0;      // initial values for all leds=0 at the start
	timer1_init();
	INT0_Init();
	INT1_Init();
	INT2_Init();
	while(1){
		display();
		}

}
/****************************************************************** end section of main function ****************************************************************/
